<?php

	const DIR_ROOT = __DIR__ . '/';

	require  __DIR__ . '/consts/dirs.php';

	require DIR_BASE . 'craft/Craft.php';
	require DIR_BASE . 'functions.php';
	require DIR_BASE_HELPER . 'Translation.php';

	/**
	 * Craft. Работа с командной строкой.
	 */
	abstract class Craft {
		/**
		 * Запускает интерпретатор
		 * @return void
		 */
		public static function run(): void {
			$command = $_SERVER['argv'][1] ?? '';
			$entity = $_SERVER['argv'][2] ?? '';
			$name = $_SERVER['argv'][3] ?? '';
			$flags = [];
			for ($i = 4; $i < count($_SERVER['argv']); $i++) {
				$param = $_SERVER['argv'][$i];
				if (!preg_match('/^--([a-zA-Z0-9]+)(:(.*))?$/', $param, $matches)) continue;

				$flags[] = ['name' => $matches[1], 'params' => isset($matches[3]) ? explode(',', $matches[3]) : []];
			}

			[$state, $messages] = \Base\Craft\Craft::run($entity, $command, $name, $flags);

			($state) ? Message::echo("\n\033[32mКоманда выполнена успешно\033[0m") : Message::echo("\n\033[31mВыполнение команды завершено с ошибкой\033[0m");

			foreach ($messages as $message) {
				switch ($message['type']) {
					case 'info': Message::info($message['message']); break;
					case 'success': Message::success($message['message']); break;
					case 'warning': Message::warning($message['message']); break;
					case 'error': Message::error($message['message']); if ($message['data']) { Message::echo(__('Подробнее:')); foreach ($message['data'] as $values) foreach ($values as $text) Message::info($text); } break;
				}
			}
		}

	}

	/**
	 * Craft. Работа с сообщениями
	 */
	abstract class Message {
		/**
		 * Выводит информационное сообщения в консоль
		 * @param string $message - Сообщение
		 * @return void
		 */
		public static function info(string $message): void {
			self::echo("\033[36mИнформация:\033[0m {$message}");
		}

		/**
		 * Выводит сообщение об успехе в консоль
		 * @param string $message - Сообщение
		 * @return void
		 */
		public static function success(string $message): void {
			self::echo("\033[32mУспех:\033[0m {$message}");
		}

		/**
		 * Выводит предупреждение в консоль
		 * @param string $message - Сообщение
		 * @return void
		 */
		public static function warning(string $message): void {
			self::echo("\033[33mПредупреждение:\033[0m {$message}");
		}

		/**
		 * Выводит сообщение об ошибке в консоль
		 * @param string $message - Сообщение
		 * @return void
		 */
		public static function error(string $message): void {
			self::echo("\033[31mОшибка:\033[0m {$message}");
		}

		/**
		 * Выводит сообщение в консоль
		 * @param string $message - Сообщение
		 * @return void
		 */
		public static function echo(string $message): void {
			echo "{$message}\n";
		}

	}

	Craft::run();