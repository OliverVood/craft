@use "variables" as *;
@use 'functions' as *;

$debug_color_head: #dd5e00;
$debug_color_keyword: #dd5e00;
$debug_color_number: #13b900;
$debug_color_string: #0095b9;


body.div.debugger { display: block; }
.debugger {
	position: fixed; right: 0; bottom: 0; left: 0; z-index: $z-debugger; color: $color-text-primary;
	> .manager {
		position: absolute; bottom: 0; left: 0; width: 40px; height: 40px;
		> .toggle {
			position: absolute; bottom: 0; left: 0; height: 30px; width: 30px; margin: 5px; border-radius: 0.2rem; background-image: getImageTemplate("debugger/gear.svg"); background-size: 20px; background-position: center; background-repeat: no-repeat; cursor: pointer;
			&:hover { box-shadow: 0 0 6px $color-primary; }
		}
		> .setting {
			display: none; position: absolute; bottom: 40px; left: 0; background-color: $color-primary-dark;
			> a {
				height: 30px; width: 30px; margin: 5px; display: block; border-radius: 0.2rem; background-size: 14px; background-position: center; background-repeat: no-repeat; cursor: pointer;
				&.record {
					background-image: getImageTemplate("debugger/record.svg");
					&.active { background-image: getImageTemplate("debugger/stop.svg"); }
				}
				&.track {
					background-image: getImageTemplate("debugger/track.svg");
					&.active { background-image: getImageTemplate("debugger/intrack.svg"); }
				}
				&.clear { background-image: getImageTemplate("debugger/trash.svg"); }
				&:hover { box-shadow: 0 0 6px $color-primary; }
			}
		}
		&:hover > .setting { display: block; }
	}
	> .work {
		width: 100%; background-color: $color-primary-dark;
		> .drag { height: 2px; background-color: $color-primary-dark; cursor: n-resize; }
		> .spaces {
			padding: 5px; height: 200px; overflow: auto; background-color: $color-primary;
		}
		> .panel {
			display: flex; align-items: center; gap: 5px; margin-left: 40px; height: 40px;
			> a {
				padding: 5px; color: $color-text-primary; cursor: pointer;
				&:hover, &.active { background-color: $color-primary; }
			}
		}
	}
	.link {
		cursor: pointer;
		&.active, &:hover { color: $color-secondary-light; }
	}
	.table {
		display: table; border-collapse: collapse;
		> div {
			display: table-row;
			> div {
				display: table-cell;
				&:not(:last-child) { border-right: 1px solid $color-light; }
			}
			&:not(:last-child) { border-bottom: 1px solid $color-light; }
		}
		.head { font-weight: bold; color: $debug_color_head; }
	}
	.dump {
		margin-bottom: 10px; padding-bottom: 10px; border-bottom: 1px solid $color-neutral;
		> .title { margin-bottom: 4px; }
		.variable {
			display: flex; gap: 10px;
			> .type { font-weight: bold; color: $debug_color_keyword; }
			&.integer, &.double { > .value { color: $debug_color_number; } }
			&.string > .value { color: $debug_color_string; }
			&.NULL > .value { color: $color-text-primary; }
			&.array > .value {
				> .more {
					+ .elems {
						display: none;
						> div {
							display: flex; gap: 10px;
							> .key {
								&.number > span { color: $debug_color_number; }
								&.string > span { color: $debug_color_string; }
							}
						}
					}
					&:before { content: "▶"; color: $color-text-primary; cursor: pointer; }
					&.open {
						&:before { content: "▼"; }
						+ .elems { display: block; }
					}
				}
			}
			&.object {
				> .value {
					display: flex;
					> .more {
						+ .info {
							display: none; flex-direction: column; gap: 5px;
						}
						&:before { content: "▶"; color: $color-text-primary; cursor: pointer; }
						&.open {
							&:before { content: "▼"; }
							+ .info { display: flex; }
						}
					}
				}
				.namespace {
					display: flex; align-items: center; gap: 10px;
					.icon { background-image: getImageTemplate("debugger/namespace.svg"), getImageTemplate("debugger/rhombus.svg"); }
				}
				.class {
					display: flex; align-items: center; gap: 10px;
					.icon { background-image: getImageTemplate("debugger/class.svg"), getImageTemplate("debugger/circle.svg"); }
				}
				.constants {
					display: flex; flex-direction: column; gap: 5px;
					> div {
						display: flex; gap: 10px;
						> .icon {
							&.public { background-image: getImageTemplate("debugger/constant.svg"), getImageTemplate("debugger/public.svg"); }
							&.private { background-image: getImageTemplate("debugger/constant.svg"), getImageTemplate("debugger/private.svg"); }
							&.protected { background-image: getImageTemplate("debugger/constant.svg"), getImageTemplate("debugger/protected.svg"); }
							&.final.public { background-image: getImageTemplate("debugger/final.svg"), getImageTemplate("debugger/constant.svg"), getImageTemplate("debugger/public.svg"); }
							&.final.private { background-image: getImageTemplate("debugger/final.svg"), getImageTemplate("debugger/constant.svg"), getImageTemplate("debugger/private.svg"); }
							&.final.protected { background-image: getImageTemplate("debugger/final.svg"), getImageTemplate("debugger/constant.svg"), getImageTemplate("debugger/protected.svg"); }
						}
						> .name { margin-top: 4px; }
						> .variable { margin-top: 4px; }
					}
				}
				.properties {
					display: flex; flex-direction: column; gap: 5px;
					> div {
						display: flex; gap: 10px;
						> .icon {
							&.public { background-image: getImageTemplate("debugger/field.svg"), getImageTemplate("debugger/public.svg"); }
							&.private { background-image: getImageTemplate("debugger/field.svg"), getImageTemplate("debugger/private.svg"); }
							&.protected { background-image: getImageTemplate("debugger/field.svg"), getImageTemplate("debugger/protected.svg"); }
							&.static.public { background-image: getImageTemplate("debugger/static.svg"), getImageTemplate("debugger/field.svg"), getImageTemplate("debugger/public.svg"); }
							&.static.private { background-image: getImageTemplate("debugger/static.svg"), getImageTemplate("debugger/field.svg"), getImageTemplate("debugger/private.svg"); }
							&.static.protected { background-image: getImageTemplate("debugger/static.svg"), getImageTemplate("debugger/field.svg"), getImageTemplate("debugger/protected.svg"); }
						}
						> .name { margin-top: 4px; }
						> .variable { margin-top: 4px; }
					}
				}
				.methods {
					display: flex; flex-direction: column; gap: 5px;
					> div {
						display: flex; gap: 10px; align-items: center;
						> .icon {
							&.public { background-image: getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/public.svg"); }
							&.private { background-image: getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/private.svg"); }
							&.protected { background-image: getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/protected.svg"); }
							&.static.public { background-image: getImageTemplate("debugger/static.svg"), getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/public.svg"); }
							&.static.private { background-image: getImageTemplate("debugger/static.svg"), getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/private.svg"); }
							&.static.protected { background-image: getImageTemplate("debugger/static.svg"), getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/protected.svg"); }
							&.final.public { background-image: getImageTemplate("debugger/final.svg"), getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/public.svg"); }
							&.final.private { background-image: getImageTemplate("debugger/final.svg"), getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/private.svg"); }
							&.final.protected { background-image: getImageTemplate("debugger/final.svg"), getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/protected.svg"); }
							&.final.static.public { background-image: getImageTemplate("debugger/final.svg"), getImageTemplate("debugger/static.svg"), getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/public.svg"); }
							&.final.static.private { background-image: getImageTemplate("debugger/final.svg"), getImageTemplate("debugger/static.svg"), getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/private.svg"); }
							&.final.static.protected { background-image: getImageTemplate("debugger/final.svg"), getImageTemplate("debugger/static.svg"), getImageTemplate("debugger/method.svg"), getImageTemplate("debugger/protected.svg"); }
						}
					}
				}
				.icon { width: 20px; height: 20px; background-position: center; background-size: contain; background-repeat: no-repeat; }
			}
		}
	}
}